/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Land as PrismaLand } from "@prisma/client";

export class LandServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.LandCountArgs, "select">): Promise<number> {
    return this.prisma.land.count(args);
  }

  async lands(args: Prisma.LandFindManyArgs): Promise<PrismaLand[]> {
    return this.prisma.land.findMany(args);
  }
  async land(args: Prisma.LandFindUniqueArgs): Promise<PrismaLand | null> {
    return this.prisma.land.findUnique(args);
  }
  async createLand(args: Prisma.LandCreateArgs): Promise<PrismaLand> {
    return this.prisma.land.create(args);
  }
  async updateLand(args: Prisma.LandUpdateArgs): Promise<PrismaLand> {
    return this.prisma.land.update(args);
  }
  async deleteLand(args: Prisma.LandDeleteArgs): Promise<PrismaLand> {
    return this.prisma.land.delete(args);
  }
}
